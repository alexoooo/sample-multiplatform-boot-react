buildscript {
    ext {
        // TODO: upgrade once bug is fixed:
        //  https://github.com/spring-projects/spring-framework/issues/23961
//        springBootVersion = '2.2.0.RELEASE'
        springBootVersion = '2.2.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}


plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlinx-serialization'

//    id 'kotlin-spring'
//    id 'org.springframework.boot'
//    id 'io.spring.dependency-management'

//    id 'application'
//    id 'distribution'
}

apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/kotlin-js-wrappers" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    mavenCentral()
}

def kotlin_version = 'pre.94-kotlin-1.3.70' // for kotlin-wrappers
def ktor_version = '1.3.2'
def logback_version = '1.2.3'
def kotlinx_serialization_version = '0.20.0'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "org.jetbrains:kotlin-css-jvm:1.0.0-$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinx_serialization_version"
    implementation "org.jetbrains.exposed:exposed-core:0.22.1"
    implementation "org.jetbrains.exposed:exposed-dao:0.22.1"
    implementation "org.jetbrains.exposed:exposed-jdbc:0.22.1"
    implementation 'com.h2database:h2:1.4.200'

    implementation project(":proj-common")

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

//application {
//    mainClassName = 'io.ktor.server.netty.EngineMain'
//}

processResources {
    from project(":proj-js").tasks.getByName('browserProductionWebpack').destinationDirectory

    //todo: bug?
    dependsOn project(":proj-js").tasks.getByName('browserProductionWebpack')
}


////// Dev server

task devServerResources(type: Copy) {
    destinationDir = new File(project.buildDir, "dev-resources")
    from sourceSets.main.resources
    filter { line -> line.replaceAll('port = 8080', 'port = 8081') }
}

task prepareDevServer {
    dependsOn "compileKotlin"
    dependsOn "devServerResources"
}

task devServer(type: JavaExec) {
    dependsOn "prepareDevServer"

    classpath = project.files(
            configurations.runtimeClasspath,
            new File(project.buildDir, "classes/kotlin/main"),
            new File(project.buildDir, "dev-resources")
    )
//    main = 'io.ktor.server.netty.EngineMain'
}

///////////////

compileKotlin {
    targetCompatibility = javaVersion
    sourceCompatibility = javaVersion
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}

jar {
    enabled = true
}
bootJar {
    classifier = 'boot'
}